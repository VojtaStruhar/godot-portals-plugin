[gd_scene load_steps=27 format=4 uid="uid://5vo86e4fice3"]

[ext_resource type="Material" uid="uid://dgjiw8udooecr" path="res://assets/prototyping/M_prototype_dark.tres" id="1_uy66w"]
[ext_resource type="Script" uid="uid://d2crarvkhd45r" path="res://scripts/player.gd" id="3_lff3k"]
[ext_resource type="PackedScene" uid="uid://0vmntyr615js" path="res://assets/prototyping/prop_cube.tscn" id="4_8bheg"]
[ext_resource type="PackedScene" uid="uid://dxvxy65pv5hoe" path="res://assets/prototyping/prop_sphere.tscn" id="5_p3b8s"]
[ext_resource type="PackedScene" uid="uid://caqayjkbvlel5" path="res://assets/prototyping/prop_torus.tscn" id="6_p3b8s"]
[ext_resource type="Texture2D" uid="uid://dj7d77ksm7a6t" path="res://assets/prototyping/prototype_blue.png" id="7_8wh7v"]
[ext_resource type="Script" uid="uid://cw1r4c1d7beyv" path="res://addons/portals/scripts/portal_3d.gd" id="8_8wh7v"]

[sub_resource type="GDScript" id="GDScript_hc4gn"]
resource_name = "portal_watcher"
script/source = "extends TextureRect


@export var portal: Portal3D

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	if portal:
		await RenderingServer.frame_post_draw
		texture = portal.portal_viewport.get_texture()
		
		var label = Label.new()
		label.text = portal.name
		label.anchor_left = 0
		label.anchor_top = 0
		self.add_child(label)
"

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_lff3k"]
sky_horizon_color = Color(0.662243, 0.671743, 0.686743, 1)
ground_horizon_color = Color(0.662243, 0.671743, 0.686743, 1)

[sub_resource type="Sky" id="Sky_hllyk"]
sky_material = SubResource("ProceduralSkyMaterial_lff3k")

[sub_resource type="Environment" id="Environment_8bheg"]
background_mode = 2
sky = SubResource("Sky_hllyk")
tonemap_mode = 3
glow_enabled = true

[sub_resource type="BoxMesh" id="BoxMesh_k2msj"]
size = Vector3(20, 1, 20)

[sub_resource type="ConvexPolygonShape3D" id="ConvexPolygonShape3D_uy66w"]
points = PackedVector3Array(-10, -0.5, -10, -10, 0.5, -10, 10, -0.5, -10, -10, -0.5, 10, -10, 0.5, 10, 10, 0.5, -10, 10, -0.5, 10, 10, 0.5, 10)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_lff3k"]
data = PackedVector3Array(-1.25, -1.375, -0.125, -1.25, -1.375, 0.125, -1, -1.375, -0.125, 1, 1.125, 0.125, 1.25, 1.375, 0.125, 1, -1.375, 0.125, -1.25, -1.375, 0.125, -1.25, -1.375, -0.125, -1.25, 1.375, -0.125, -1, -1.375, -0.125, -1.25, -1.375, 0.125, -1, -1.375, 0.125, -1, -1.375, 0.125, -1.25, -1.375, 0.125, -1, 1.125, 0.125, -1, 1.125, -0.125, -1.25, 1.375, -0.125, -1, -1.375, -0.125, -1, 1.125, -0.125, 1.25, 1.375, -0.125, -1.25, 1.375, -0.125, -1.25, 1.375, -0.125, -1.25, 1.375, 0.125, -1.25, -1.375, 0.125, -1.25, 1.375, 0.125, -1, 1.125, 0.125, -1.25, -1.375, 0.125, -1.25, 1.375, -0.125, 1.25, 1.375, 0.125, -1.25, 1.375, 0.125, -1, 1.125, 0.125, -1.25, 1.375, 0.125, 1, 1.125, 0.125, 1.25, -1.375, -0.125, 1, -1.375, -0.125, 1.25, -1.375, 0.125, -1, -1.375, -0.125, -1.25, 1.375, -0.125, -1.25, -1.375, -0.125, 1, -1.375, -0.125, 1.25, -1.375, -0.125, 1, 1.125, -0.125, 1.25, -1.375, 0.125, 1, -1.375, -0.125, 1, -1.375, 0.125, 1.25, -1.375, 0.125, 1.25, 1.375, 0.125, 1.25, -1.375, -0.125, 1, -1.375, 0.125, 1.25, 1.375, 0.125, 1.25, -1.375, 0.125, 1, 1.125, -0.125, 1.25, 1.375, -0.125, -1, 1.125, -0.125, 1.25, 1.375, -0.125, 1.25, 1.375, 0.125, -1.25, 1.375, -0.125, 1.25, 1.375, -0.125, 1, 1.125, -0.125, 1.25, -1.375, -0.125, 1.25, 1.375, 0.125, 1.25, 1.375, -0.125, 1.25, -1.375, -0.125, 1, 1.125, 0.125, -1.25, 1.375, 0.125, 1.25, 1.375, 0.125, -1, 1.125, 0.125, -1, -1.375, -0.125, -1, -1.375, 0.125, -1, -1.375, -0.125, -1, 1.125, 0.125, -1, 1.125, -0.125, 1, 1.125, -0.125, 1, -1.375, 0.125, 1, -1.375, -0.125, 1, 1.125, 0.125, 1, 1.125, -0.125, -1, 1.125, -0.125, 1, -1.375, 0.125, 1, 1.125, -0.125, 1, 1.125, 0.125, -1, 1.125, -0.125, -1, 1.125, 0.125, 1, 1.125, 0.125)

[sub_resource type="ArrayMesh" id="ArrayMesh_hllyk"]
_surfaces = [{
"aabb": AABB(-1.25, -1.375, -0.125, 2.5, 2.75, 0.25),
"attribute_data": PackedByteArray("AACAPwAAAAAAAAAAAAAAAAAAgD/NzMw9zczMPYwuuj0AAAAAAAAAAM3MzD0AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAAAAAAACAP83MzD0AAAAAAAAAAAAAAADNzMw9ZmZmPwAAgD8AAIA/AACAP2ZmZj+MLro9ZmZmPy+6aD8AAIA/AACAP2ZmZj8AAAAAZmZmPy+6aD8AAAAAAACAPwAAgD8AAIA/AAAAAAAAAAAAAAAAAACAPwAAgD8AAIA/AACAPwAAAABmZmY/jC66PQAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAAAAAAIA/ZmZmP4wuuj0AAIA/AAAAAM3MzD2MLro9AACAPwAAgD8AAIA/ZmZmPwAAAAAAAIA/ZmZmPwAAAAAAAIA/AACAPwAAgD8AAAAAzczMPQAAAAAAAAAAAAAAAM3MzD0vumg/AAAAAAAAgD8AAIA/ZmZmPwAAAABmZmY/AACAPwAAAAAAAAAAAAAAAAAAgD8AAIA/zczMPQAAgD8AAAAAAAAAAAAAAAAAAIA/zczMPS+6aD8AAAAAAACAP2ZmZj8vumg/AACAPwAAAAAAAAAAAAAAAAAAgD8AAIA/AAAAAAAAgD/NzMw9L7poPwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAgD8AAIA/zczMPYwuuj0AAIA/AAAAAAAAAAAAAAAAAAAAAAAAID8AAIA/AADAPgAAgD8AACA/AACAPwAAwD4AAAAAAAAgPwAAAAAAAMA+AAAAAAAAID8AAIA/AADAPgAAgD8AACA/AADAPgAAAAAAACA/AAAAAAAAID8AAIA/AACAPwAAwD4AAAAAAAAgPwAAAAAAAMA+AAAgPwAAgD8AAMA+AACAPwAAwD4AAAAA"),
"format": 34359738391,
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 84,
"vertex_data": PackedByteArray("AACgvwAAsL8AAAC+AACgvwAAsL8AAAA+AACAvwAAsL8AAAC+AACAPwAAkD8AAAA+AACgPwAAsD8AAAA+AACAPwAAsL8AAAA+AACgvwAAsL8AAAA+AACgvwAAsL8AAAC+AACgvwAAsD8AAAC+AACAvwAAsL8AAAC+AACgvwAAsL8AAAA+AACAvwAAsL8AAAA+AACAvwAAsL8AAAA+AACgvwAAsL8AAAA+AACAvwAAkD8AAAA+AACAvwAAkD8AAAC+AACgvwAAsD8AAAC+AACAvwAAsL8AAAC+AACAvwAAkD8AAAC+AACgPwAAsD8AAAC+AACgvwAAsD8AAAC+AACgvwAAsD8AAAC+AACgvwAAsD8AAAA+AACgvwAAsL8AAAA+AACgvwAAsD8AAAA+AACAvwAAkD8AAAA+AACgvwAAsL8AAAA+AACgvwAAsD8AAAC+AACgPwAAsD8AAAA+AACgvwAAsD8AAAA+AACAvwAAkD8AAAA+AACgvwAAsD8AAAA+AACAPwAAkD8AAAA+AACgPwAAsL8AAAC+AACAPwAAsL8AAAC+AACgPwAAsL8AAAA+AACAvwAAsL8AAAC+AACgvwAAsD8AAAC+AACgvwAAsL8AAAC+AACAPwAAsL8AAAC+AACgPwAAsL8AAAC+AACAPwAAkD8AAAC+AACgPwAAsL8AAAA+AACAPwAAsL8AAAC+AACAPwAAsL8AAAA+AACgPwAAsL8AAAA+AACgPwAAsD8AAAA+AACgPwAAsL8AAAC+AACAPwAAsL8AAAA+AACgPwAAsD8AAAA+AACgPwAAsL8AAAA+AACAPwAAkD8AAAC+AACgPwAAsD8AAAC+AACAvwAAkD8AAAC+AACgPwAAsD8AAAC+AACgPwAAsD8AAAA+AACgvwAAsD8AAAC+AACgPwAAsD8AAAC+AACAPwAAkD8AAAC+AACgPwAAsL8AAAC+AACgPwAAsD8AAAA+AACgPwAAsD8AAAC+AACgPwAAsL8AAAC+AACAPwAAkD8AAAA+AACgvwAAsD8AAAA+AACgPwAAsD8AAAA+AACAvwAAkD8AAAA+AACAvwAAsL8AAAC+AACAvwAAsL8AAAA+AACAvwAAsL8AAAC+AACAvwAAkD8AAAA+AACAvwAAkD8AAAC+AACAPwAAkD8AAAC+AACAPwAAsL8AAAA+AACAPwAAsL8AAAC+AACAPwAAkD8AAAA+AACAPwAAkD8AAAC+AACAvwAAkD8AAAC+AACAPwAAsL8AAAA+AACAPwAAkD8AAAC+AACAPwAAkD8AAAA+AACAvwAAkD8AAAC+AACAvwAAkD8AAAA+AACAPwAAkD8AAAA+/38AAP//AAD/fwAA//8AAP9/AAD//wAA/3//fwAA/z//f/9/AAD/P/9//38AAP8/AAD/f/9//n8AAP9//3/+fwAA/3//f/5//38AAP//AAD/fwAA//8AAP9/AAD//wAA/3//fwAA/z//f/9/AAD/P/9//38AAP8//////wAA/z//////AAD/P/////8AAP8//////wAA/z//////AAD/P/////8AAP8/AAD/f/9//n8AAP9//3/+fwAA/3//f/5//3//fwAA/z//f/9/AAD/P/9//38AAP8//3//////AAD/f/////8AAP9//////wAA/3//fwAA/z//f/9/AAD/P/9//38AAP8//38AAP//AAD/fwAA//8AAP9/AAD//wAA/////wAA/z//////AAD/P/////8AAP8//////wAA/z//////AAD/P/////8AAP8//38AAP//AAD/fwAA//8AAP9/AAD//wAA////f/9//n////9//3/+f////3//f/5//3//fwAA/z//f/9/AAD/P/9//38AAP8//////wAA/z//////AAD/P/////8AAP8//3//////AAD/f/////8AAP9//////wAA/////wAA/z//////AAD/P/////8AAP8/////f/9//n////9//3/+f////3//f/5//3//fwAA/z//f/9/AAD/P/9//38AAP8/////f/9/AID///9//38AgP///3//fwCA////f/9/AID///9//38AgP///3//fwCAAAD/f/9/AIAAAP9//38AgAAA/3//fwCA/38AAP//////fwAA//////9/AAD/////AAD/f/9/AIAAAP9//38AgAAA/3//fwCA/38AAP//////fwAA//////9/AAD/////")
}]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_k2msj"]
height = 1.75

[sub_resource type="CapsuleMesh" id="CapsuleMesh_lff3k"]
radius = 0.4
height = 1.75

[sub_resource type="GDScript" id="GDScript_8wh7v"]
resource_name = "perpetum_mobile"
script/source = "extends Area3D

@export var speed: float = 2

@onready var sphere_mesh: MeshInstance3D = $MeshInstance3D

func _physics_process(delta: float) -> void:
	var forward = -global_basis.z
	global_position += forward * speed * delta

func get_teleportable_meshes() -> Array[MeshInstance3D]:
	return [sphere_mesh]


func _process(delta: float) -> void:
	if Input.is_action_just_pressed(\"toggle_portals\"):
		print(\"Reversing %s\" % name)
		speed *= -1
"

[sub_resource type="SphereShape3D" id="SphereShape3D_lbpks"]

[sub_resource type="Shader" id="Shader_lbpks"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.4.1.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_burley, specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform ivec2 albedo_texture_size;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);
varying vec3 uv1_triplanar_pos;

uniform float uv1_blend_sharpness : hint_range(0.0, 150.0, 0.001);
varying vec3 uv1_power_normal;

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

#include \"res://addons/portals/materials/portalclip_mesh.gdshaderinc\"

PORTALCLIP_UNIFORMS

void vertex() {
	vec3 normal = NORMAL;

	TANGENT = vec3(0.0, 0.0, -1.0) * abs(normal.x);
	TANGENT += vec3(1.0, 0.0, 0.0) * abs(normal.y);
	TANGENT += vec3(1.0, 0.0, 0.0) * abs(normal.z);
	TANGENT = normalize(TANGENT);

	BINORMAL = vec3(0.0, 1.0, 0.0) * abs(normal.x);
	BINORMAL += vec3(0.0, 0.0, -1.0) * abs(normal.y);
	BINORMAL += vec3(0.0, 1.0, 0.0) * abs(normal.z);
	BINORMAL = normalize(BINORMAL);

	// UV1 Triplanar: Enabled
	uv1_power_normal = pow(abs(NORMAL), vec3(uv1_blend_sharpness));
	uv1_triplanar_pos = VERTEX * uv1_scale + uv1_offset;
	uv1_power_normal /= dot(uv1_power_normal, vec3(1.0));
	uv1_triplanar_pos *= vec3(1.0, -1.0, 1.0);
	
	PORTALCLIP_VERTEX;
}

vec4 triplanar_texture(sampler2D p_sampler, vec3 p_weights, vec3 p_triplanar_pos) {
	vec4 samp = vec4(0.0);
	samp += texture(p_sampler, p_triplanar_pos.xy) * p_weights.z;
	samp += texture(p_sampler, p_triplanar_pos.xz) * p_weights.y;
	samp += texture(p_sampler, p_triplanar_pos.zy * vec2(-1.0, 1.0)) * p_weights.x;
	return samp;
}

void fragment() {
	vec4 albedo_tex = triplanar_texture(texture_albedo, uv1_power_normal, uv1_triplanar_pos);
	ALBEDO = albedo.rgb * albedo_tex.rgb;

	float metallic_tex = dot(triplanar_texture(texture_metallic, uv1_power_normal, uv1_triplanar_pos), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(triplanar_texture(texture_roughness, uv1_power_normal, uv1_triplanar_pos), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	
	PORTALCLIP_FRAGMENT;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_eavfu"]
render_priority = 0
shader = SubResource("Shader_lbpks")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/texture_albedo = ExtResource("7_8wh7v")
shader_parameter/albedo_texture_size = Vector2i(1024, 1024)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_blend_sharpness = 1.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)

[sub_resource type="SphereMesh" id="SphereMesh_eavfu"]

[sub_resource type="BoxMesh" id="BoxMesh_8wh7v"]
size = Vector3(2, 2.5, 0.05)

[sub_resource type="BoxShape3D" id="BoxShape3D_8wh7v"]
size = Vector3(2, 2.5, 1)

[sub_resource type="BoxMesh" id="BoxMesh_lbpks"]
size = Vector3(2, 2.5, 0.05)

[sub_resource type="BoxShape3D" id="BoxShape3D_lbpks"]
size = Vector3(2, 2.5, 1)

[node name="Level_Basics" type="Node3D"]

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="PortalWatcher" type="TextureRect" parent="CanvasLayer"]
clip_contents = true
anchors_preset = -1
anchor_right = 0.238
anchor_bottom = 0.38
offset_right = 0.039978
offset_bottom = -0.400024
expand_mode = 1
script = SubResource("GDScript_hc4gn")

[node name="PortalWatcher2" type="TextureRect" parent="CanvasLayer"]
clip_contents = true
anchors_preset = -1
anchor_left = 0.757
anchor_right = 1.0
anchor_bottom = 0.38
expand_mode = 1
script = SubResource("GDScript_hc4gn")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_8bheg")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -0.999999, -4.37114e-08, 0, 0, 0)
shadow_enabled = true

[node name="Ground" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.5, 0)
material_override = ExtResource("1_uy66w")
mesh = SubResource("BoxMesh_k2msj")
metadata/_edit_group_ = true
metadata/_edit_lock_ = true

[node name="StaticBody3D" type="StaticBody3D" parent="Ground"]
visible = false

[node name="CollisionShape3D" type="CollisionShape3D" parent="Ground/StaticBody3D"]
shape = SubResource("ConvexPolygonShape3D_uy66w")

[node name="PortalFrame_A" type="StaticBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2, 0, 0)

[node name="PortalFrameCollision" type="CollisionShape3D" parent="PortalFrame_A"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.375, 0)
visible = false
shape = SubResource("ConcavePolygonShape3D_lff3k")

[node name="PortalFrameMesh" type="MeshInstance3D" parent="PortalFrame_A"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.375, 0)
material_override = ExtResource("1_uy66w")
mesh = SubResource("ArrayMesh_hllyk")
skeleton = NodePath("../..")

[node name="PortalFrame_B" type="StaticBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2.5, 0, 0)

[node name="PortalFrameCollision" type="CollisionShape3D" parent="PortalFrame_B"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.375, 0)
visible = false
shape = SubResource("ConcavePolygonShape3D_lff3k")

[node name="PortalFrameMesh" type="MeshInstance3D" parent="PortalFrame_B"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.375, 0)
material_override = ExtResource("1_uy66w")
mesh = SubResource("ArrayMesh_hllyk")
skeleton = NodePath("../..")

[node name="Props" type="Node3D" parent="."]

[node name="PropCube" parent="Props" instance=ExtResource("4_8bheg")]
transform = Transform3D(0.965926, 0, -0.258819, 0, 1, 0, 0.258819, 0, 0.965926, -3.5, 0.5, 2.5)
skeleton = NodePath("../..")

[node name="PropSphere" parent="Props" instance=ExtResource("5_p3b8s")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 4.92845, 0.5, 3.7125)
skeleton = NodePath("../..")

[node name="PropTorus" parent="Props" instance=ExtResource("6_p3b8s")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1, 0.25, -2.73127)
skeleton = NodePath("../..")

[node name="Player" type="CharacterBody3D" parent="." node_paths=PackedStringArray("camera")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.448394, 0.875832, 4.08334)
collision_layer = 129
script = ExtResource("3_lff3k")
camera = NodePath("Node3D/PlayerCamera")
metadata/_edit_group_ = true

[node name="CollisionShape3D" type="CollisionShape3D" parent="Player"]
shape = SubResource("CapsuleShape3D_k2msj")

[node name="MeshInstance3D" type="MeshInstance3D" parent="Player"]
mesh = SubResource("CapsuleMesh_lff3k")

[node name="Node3D" type="Node3D" parent="Player"]

[node name="PlayerCamera" type="Camera3D" parent="Player/Node3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.35, 0)
current = true

[node name="UnstoppableSphere" type="Area3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.0808, 1.25, 5.75)
collision_layer = 129
script = SubResource("GDScript_8wh7v")
speed = 1.0

[node name="CollisionShape3D" type="CollisionShape3D" parent="UnstoppableSphere"]
shape = SubResource("SphereShape3D_lbpks")

[node name="MeshInstance3D" type="MeshInstance3D" parent="UnstoppableSphere"]
material_override = SubResource("ShaderMaterial_eavfu")
instance_shader_parameters/clip_active = true
instance_shader_parameters/clip_normal = Vector3(0, 1, 0)
instance_shader_parameters/clip_point = Vector3(0, 0, 0)
mesh = SubResource("SphereMesh_eavfu")

[node name="CubePortal" type="Node3D" parent="." node_paths=PackedStringArray("exit_portal") groups=["portals"]]
process_priority = 100
process_physics_priority = 100
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2, 1.25, 0)
script = ExtResource("8_8wh7v")
_portal_mesh_path = NodePath("Portal3D_Mesh")
_teleport_area_path = NodePath("TeleportArea")
_teleport_collider_path = NodePath("TeleportArea/Collider")
portal_size = Vector2(2, 2.5)
exit_portal = NodePath("../SpherePortal")
portal_frame_width = 0.0
portal_render_layer = 128
viewport_size_mode = 0
is_teleport = true
teleport_direction = 2
rigidbody_boost = 0.0
teleport_collision_mask = 128
teleport_tolerance = 0.5
teleport_interactions = 7
_tb_debug_action = Callable()
metadata/_custom_type_script = "uid://cw1r4c1d7beyv"
metadata/_edit_group_ = true

[node name="Portal3D_Mesh" type="MeshInstance3D" parent="CubePortal"]
layers = 128
cast_shadow = 0
mesh = SubResource("BoxMesh_8wh7v")

[node name="TeleportArea" type="Area3D" parent="CubePortal"]

[node name="Collider" type="CollisionShape3D" parent="CubePortal/TeleportArea"]
shape = SubResource("BoxShape3D_8wh7v")

[node name="SpherePortal" type="Node3D" parent="." node_paths=PackedStringArray("exit_portal") groups=["portals"]]
process_priority = 100
process_physics_priority = 100
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2.5, 1.25, 0)
script = ExtResource("8_8wh7v")
_portal_mesh_path = NodePath("Portal3D2_Mesh")
_teleport_area_path = NodePath("TeleportArea")
_teleport_collider_path = NodePath("TeleportArea/Collider")
portal_size = Vector2(2, 2.5)
exit_portal = NodePath("../CubePortal")
portal_frame_width = 0.0
portal_render_layer = 128
viewport_size_mode = 0
is_teleport = true
teleport_direction = 2
rigidbody_boost = 0.0
teleport_collision_mask = 128
teleport_tolerance = 0.5
teleport_interactions = 7
_tb_debug_action = Callable()
metadata/_custom_type_script = "uid://cw1r4c1d7beyv"
metadata/_edit_group_ = true

[node name="Portal3D2_Mesh" type="MeshInstance3D" parent="SpherePortal"]
layers = 128
cast_shadow = 0
mesh = SubResource("BoxMesh_lbpks")

[node name="TeleportArea" type="Area3D" parent="SpherePortal"]

[node name="Collider" type="CollisionShape3D" parent="SpherePortal/TeleportArea"]
shape = SubResource("BoxShape3D_lbpks")
